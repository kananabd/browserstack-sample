"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SMService = void 0;
const client_secrets_manager_1 = require("@aws-sdk/client-secrets-manager");
/**
 * Service to work with AWS SecretsManager services
 */
class SMService {
    constructor() {
        this._secretsManager = new client_secrets_manager_1.SecretsManagerClient();
    }
    /**
     * The following are the punctuation characters that can be included in the generated password:
     * ! # $ % + - . ? @ ^ _
     * More details {@link https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetRandomPassword.html#API_GetRandomPassword_RequestSyntax}
     * excludeCharacters parameter includes characters that should not be included in the generated password.
     * By default [ ] ( ) { } < > | / \ & ~ : ; , = ' " * ` characters will be excluded.
     */
    async getRandomPassword(length = 30, excludeCharacters = `\`[](){}<>|/\\&~:;,='"*^.`) {
        const command = new client_secrets_manager_1.GetRandomPasswordCommand({
            PasswordLength: length,
            ExcludeCharacters: excludeCharacters
        });
        const result = await this._secretsManager.send(command);
        return result.RandomPassword;
    }
    async getSecret(secretName) {
        const command = new client_secrets_manager_1.GetSecretValueCommand({
            SecretId: secretName
        });
        const result = await this._secretsManager.send(command);
        return result.SecretString;
    }
}
exports.SMService = SMService;
