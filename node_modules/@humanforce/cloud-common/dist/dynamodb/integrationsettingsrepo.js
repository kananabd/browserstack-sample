"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntegrationSettingsRepository = void 0;
const dynamodbbase_1 = require("./dynamodbbase");
const integrationsettingsmodel_1 = require("./models/integrationsettingsmodel");
class IntegrationSettingsRepository extends dynamodbbase_1.DynamoDbBase {
    /**
     * Returns integration settings by given identifier
     * @param {string} instanceId - an unique integration settings identifier
     * @param {boolean} deleted - flag indicating that the entry is active
     * @returns {Promise<IntegrationSetting>} - promised object to get integration settings
     */
    async getIntegrationSetting(instanceId, deleted = false) {
        const setting = await this.getItem("IntegrationSetting", "instanceId", instanceId, undefined, undefined, false);
        return (Object.keys(setting).length === 0 || !setting.Item || Object.keys(setting.Item).length === 0 || (!deleted && setting.Item["deleted"]))
            ? null
            : integrationsettingsmodel_1.IntegrationSetting.bind(setting.Item);
    }
    async getAllIntegrationSetting() {
        const result = [];
        const res = await this.getItems("IntegrationSetting", "instanceId", [], false, false);
        if (res.length === 0) {
            return [];
        }
        for (const item of res) {
            if (!item["deleted"]) {
                result.push(integrationsettingsmodel_1.IntegrationSetting.bind(item));
            }
        }
        return result;
    }
    /**
     * Updates the integration settings
     * @param setting
     * @returns {Promise<void>}
     */
    async updateIntegrationSetting(setting) {
        await this.putItem("IntegrationSetting", setting, undefined, undefined, undefined, undefined, false);
    }
    /**
     * Deletes the integration settings
     * @param instanceId
     * @returns {Promise<void>}
     */
    async deleteIntegrationSetting(instanceId) {
        await this.deleteItem("IntegrationSetting", "instanceId", instanceId, undefined, undefined, false);
    }
}
exports.IntegrationSettingsRepository = IntegrationSettingsRepository;
