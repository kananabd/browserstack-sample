/// <reference types="node" />
import { HeadObjectOutput, ListBucketsOutput, PutObjectOutput } from "@aws-sdk/client-s3";
import { AWSService } from "./awsservice";
/**
 * Service to work with AWS S3
 */
export declare class S3Service extends AWSService {
    private csvHeaderBytesLimit;
    private _s3;
    doesBucketExist(bucketName: string): Promise<boolean>;
    assumeRole(roleArn: string): Promise<void>;
    getAllBuckets(): Promise<ListBucketsOutput>;
    createPrivateBucket(bucketName: string): Promise<void>;
    deleteBucket(bucketName: string): Promise<void>;
    createFolder(bucketName: string, key: string): Promise<PutObjectOutput>;
    isBucketEmpty(bucketName: string): Promise<boolean>;
    deleteFolder(bucketName: string, key: string): Promise<void>;
    getCSVFileHeaders(bucketName: string, fileName: string): Promise<Array<string>>;
    getBucketFiles(bucketName: string, prefix: string): Promise<Array<string>>;
    getBucketFilesWithMetadata(bucketName: string, prefix: string): Promise<Array<{
        name: string;
        lastModified: Date;
    }>>;
    getSignedUrl(fileName: string): Promise<string>;
    getFileInfo(bucket: string, filePath: string): Promise<HeadObjectOutput | undefined>;
    deleteFile(bucket: string, filePath: string): Promise<boolean>;
    getFileData(bucketName: string, fileName: string): Promise<{
        data: Buffer;
        metadata?: {
            [key: string]: string;
        };
    }>;
    getFileTags(bucketName: string, fileName: string): Promise<Array<{
        name: string;
        value: string;
    }> | undefined>;
}
