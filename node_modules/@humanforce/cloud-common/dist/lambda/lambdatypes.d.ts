import { Context } from "aws-lambda";
/**
 * Low level structed passed by AWS into lambda. Consists of information about the API context.
 * Please @see http://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-context.html for details
 */
export interface LambdaContext extends Context {
}
/**
 * A base type of the lambda response
 */
export interface LambdaResponseBase {
}
/**
 * A standard type of the response accepted by GatewayAPI (in proxy mode)
 */
export interface LambdaResponse extends LambdaResponseBase {
    statusCode: number;
    headers: any;
    body: string;
}
/**
 * All response bodies must be inherited from this class and could have message populated during the errors
 *
 * @export
 * @interface GenericResponseBody
 */
export interface LambdaResponseBody {
    success?: boolean;
    message?: string;
    payload?: string;
}
/**
 * The base class for the request
 */
export interface LambdaRequest {
}
/**
 * The request parameters
 */
export interface LambdaQueryStringParameters {
    [id: string]: string | undefined;
}
/**
 * Uses to pass http error code through handled exception
 * @export
 * @extends {Error}
 */
export declare class HTTPError extends Error {
    statusCode: number;
    /**
     * Creates an instance of HTTPError.
     * @param {number} statusCode - Given status code (will be used as HTTP status code of the GatewayAPI response)
     * @param {string} [message] - A message with error explanation
     *
     * @memberOf HTTPError
     */
    constructor(statusCode: number, message: string);
}
