"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Customer = void 0;
class Customer {
    constructor(customerId, name) {
        this.deleted = false;
        this.customerId = customerId;
        this.setName(name);
        this.licensedEmpCount = 0;
        this.licensedLocCount = 0;
    }
    static bind(attributes) {
        const obj = new Customer(attributes["customerId"], attributes["name"]);
        obj.tradingName = attributes["tradingName"];
        obj.setClientCode(attributes["clientCode"]);
        obj.sfoGuidKey = attributes["sfoGuidKey"];
        obj.primaryContactEmail = attributes["primaryContactEmail"];
        obj.industry = attributes["industry"];
        obj.licensedEmpCount = attributes["licensedEmpCount"] ? attributes["licensedEmpCount"] : 0;
        obj.licensedLocCount = attributes["licensedLocCount"] ? attributes["licensedLocCount"] : 0;
        obj.contractEndDate = attributes["contractEndDate"];
        obj.isNextAppEnabled = attributes["isNextAppEnabled"];
        obj.disableSugarLicenseUpdates = attributes["disableSugarLicenseUpdates"];
        obj.isAuditEnabled = attributes["isAuditEnabled"];
        obj.isHRISEnabled = attributes["isHRISEnabled"];
        obj.isOnBoardingEnabled = attributes["isOnBoardingEnabled"];
        return obj;
    }
    getCanonicalName() {
        return this.cName;
    }
    getName() {
        return this.name;
    }
    setName(name) {
        this.name = name;
        this.cName = name.toLowerCase();
    }
    getCanonicalClientCode() {
        return this.cClientCode;
    }
    getClientCode() {
        return this.clientCode;
    }
    setClientCode(clientCode) {
        this.clientCode = clientCode;
        this.cClientCode = clientCode ? clientCode.toLowerCase() : undefined;
    }
}
exports.Customer = Customer;
