import { InstanceLoglevel, InstanceStatus, InstanceType } from "./model";
export declare class SystemInstance {
    instanceId: string;
    instanceType: InstanceType;
    customerId: string;
    requestedDate: number;
    status?: InstanceStatus;
    environmentName?: string | undefined;
    apiToken?: string;
    emailToNotify?: string;
    registeredSince?: number | undefined;
    currentVersion?: string | undefined;
    licenceInfo?: string | undefined;
    alertsEnabled: boolean;
    alertsCheckFrequency?: number | undefined;
    exeEnabled: boolean;
    exe64users?: string[] | undefined;
    faceCollectionId?: string | undefined;
    deleted: boolean;
    upgradeFailed: boolean | undefined;
    isMaintenance: boolean;
    autoUpgrade: boolean;
    minLogLevel: InstanceLoglevel;
    dbCommandTimeout?: number | undefined;
    exeDbCommandTimeout?: number | undefined;
    exeMinLogLevel: InstanceLoglevel;
    features: string[] | undefined;
    isProduction: boolean | undefined;
    installDate?: number | undefined;
    private name;
    private cName;
    private endpointUrl;
    private cEndpointUrl;
    private domainUserGroup?;
    private cDomainUserGroup?;
    private dbConnectionString?;
    private cryptoPassword?;
    private intelliUrl?;
    private cIntelliUrl?;
    constructor(instanceId: string, name: string, type: InstanceType, customerId: string, endpointUrl: string, requestedDate?: number);
    static bind(attributes: {
        [key: string]: unknown;
    }): SystemInstance;
    getCanonicalName(): string;
    getName(): string;
    setName(name: string): void;
    getCanonicalEndpointUrl(): string;
    getEndpointUrl(): string;
    setEndpointUrl(endpointUrl: string): void;
    getCanonicalIntelliUrl(): string | undefined;
    getIntelliUrl(): string | undefined;
    setIntelliUrl(intelliUrl: string | undefined): void;
    getCanonicalDomainUserGroup(): string | undefined;
    getDomainUserGroup(): string | undefined;
    setDomainUserGroup(domainUserGroup: string | undefined): void;
    getDbConnectionString(): Promise<string | undefined>;
    setDbConnectionString(dbConnectionString: string | undefined): Promise<void>;
    getCryptoPassword(): Promise<string | undefined>;
    setCryptoPassword(cryptoPassword: string | undefined): Promise<void>;
    isCryptoPasswordSet(): boolean;
    isDbConnectionSet(): boolean;
    getInstanceTypeName(): string;
}
