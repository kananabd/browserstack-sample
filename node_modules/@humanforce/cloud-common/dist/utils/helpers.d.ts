/// <reference types="node" />
export declare class Helpers {
    /**
     * Generate random number within given range
     * @param {number} min - left border of the range
     * @param max - right border of the range
     */
    static getRandomNumber(min: number, max: number): number;
    /**
     * Generates a new random guid
     *
     * @static
     * @returns Random guid
     */
    static genGUID(): string;
    /**
     * Returns the current date/time in epoch
     *
     * @static
     * @returns number - epoch time
     */
    static getCurrentEpochTime(): number;
    /**
     * Convert string to boolean
     * @param value input string
     */
    static convertToBoolean(value: string): boolean;
    /**
     * Get ARN topic by name
     * @param name topic name
     * @param isEndpointATopic use lambda prefix or not. The topic name should include prefix (value of LAMBDA_ALIAS), but notification ARN shouldn't
     */
    static getTopicARNByName(name: string, isEndpointATopic?: boolean): string;
    /**
     * Check if email is valid
     * @param email email address
     */
    static isEmailValid(email: string): boolean;
    /**
     * Trim all leading and trailing white spaces from string values of object
     * @param obj any object
     */
    static deepTrim(obj: any): void;
    static base64UrlEncode(source: string | Uint8Array): string;
    static base64UrlDecode(source: string): string;
    static base64UrlDecodeToBuffer(source: string): Buffer;
}
